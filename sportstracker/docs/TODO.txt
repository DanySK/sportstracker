SportsTracker-TODO
==================

Issue #197: Sport type specific speed modes (feature request)
- requirement details: https://github.com/ssaring/sportstracker/issues/197
- branch: speed_pace
- Wording in english:
  - Setting: (Preferred) Speed Mode
  - Variants: Speed (e.g. km/h) / Pace (e.g. min/km)
- Wording in german:
  - Setting: (Bevorzugter) Geschwindigkeitsmodus
  - Variants: Geschwindigkeit (z.B. km/h) / Pace (z.B. min/km)
- Remove deprecated code:
  - de.saring.util.unitcalc.FormatUtils.SpeedView
  - de.saring.sportstracker.core.STOptions.speedView
  - de.saring.exerciseviewer.core.EVOptions.getSpeedView
- Status:
  - STOptions: option "preferredSpeedMode" has been added
  - Preferences Dialog: configuration of Preferred Speed Mode has been added
  - SportType class: property speedMode has been added
  - SportType Dialog: property speedMode can be configured by the user
  - Preferred speed mode is being used when adding new sport types or when
    loading sport types where speed mode has not been set yet
- Next:
  - SportType Dialog:
    - speedMode can only be configured when distance is recorded
  - use of SportType.speedMode in Exercise List view
  - pass speed mode to be used to ExerciseViewer
    (use from appropriate SportType or preferredSpeedMode when no SportType is defined)
  - ...

Bug on macOS 10.14 or newer:
- Problem: SportsTracker application crashes when displaying a dialog window
- Cause: it's a JavaFX bug, occurs only on macOS 10.14 or newer
- Bug report: https://bugs.openjdk.java.net/browse/JDK-8211304
- Bugfix available for OpenJFX 12 EA, has been backported to OpenJFX 11.0.2 (not released yet)
- Temporary solution: updated JavaFX to version 12-ea+6 (pre-release)
  -> tests were positive, no crashes anymore & 12-ea+6 seems to be quite stable
- Alternative manual workaround for macOS 10.14 users:
  - Open "System Preferences" and select "Security > Privacy > Accessibility"
  - Add the installed SportsTracker application to the list
- TODO: SWITCH BACK TO OPENJFX 11.0.2 WHEN IT HAS BEEN RELEASED!

Java 11 migration:
- Done: Build and tests are green. SportsTracker is running without problems.
- Open issue: JDK 11 does not provide the javapackager tool aynmore
  - currently it's not possible to build native packages
  - wait for JEP 343: Packaging Tool, see https://openjdk.java.net/jeps/343
    (could be shipped with JDK 12)
  - backport / prerelease of jpackager for JDK 11 is available from Gluon,
    it's usable with workarounds, contains minor bugs - see
    https://medium.com/@adam_carroll/java-packager-with-jdk11-31b3d620f4a8

Java 9/10 migration:
- works fine with JDK 10 (no build or test errors and no execution problems)
- Use of Java Module System / Jigsaw?
  - the JavaFX packager needs to support modules first
- use of JEP 272: Platform-Specific Desktop Features for mac-specific menu items
  (see http://openjdk.java.net/jeps/272)
  - currently for Swing apps only
  - JavaFX support might be added after Java 10: https://bugs.openjdk.java.net/browse/JDK-8091107

- Add an update notification when a new SportsTracker version has been released

JavaFX Migration:
- Migration status: completed, Swing is not in use anymore
- tested on macOS, Windows and Linux (incl. printing, drag & drop)
- DatePicker validation does not work => when removing the date no error will be shown (uses previous date)
- ControlsFX bug, remove workaround when fixed:
  - Dialogs can't be displayed when they contain multiple controls with validation support
    (see https://bitbucket.org/controlsfx/controlsfx/issues/539/multiple-dialog-fields-with-validation )
  - workaround is to setup the validation after the dialog has been shown (with Platform.invokeLater(...)
    => remove after the bug has been fixed in Filter-, Note- and Weight Dialog
- ExerciseViewer: Done & tested
  - Bug (also with JavaFX 8u40): EV window is always placed in screen center, not placed at center of parent window
    (initially, when no previous window bounds were persisted)
- Print Views: Done for all views
  - Problem in List Views: tables can't be printed completely, the JavaFX API support only the printing
    of one single node at one single page
  - Used workaround: create a snapshot image of the current displayed table view, scale to fit on paper
    and print the image instead the view (prints only the visible rows)
  - Update ViewPrinter when JavaFX API supports the printing of the complete tables
    (the I18N properties for list printing on multiple pages are present, see st.???view.print.???)
- Spinner in Overview Dialog: remove mouse wheel workaround when added to JavaFX by default
  - I've filed a tweak request: https://javafx-jira.kenai.com/browse/RT-40269
- JavaFX bug in DatePicker: text editor entries are always ignored
  - https://bugs.openjdk.java.net/browse/JDK-8136838
  - although this bug is closed, it still exists in JDK 10
  - temporary workaround in FxWorkarounds.fixDatePickerTextEntry() => remove when fixed in JavaFX

Java 8 migration status:
- full use of Lambdas and the new Java Date API (JSR 310) in all modules
- the Parser implementations of the ExerciseViewer has not been updated for
  using the latest Java 8 features 
  => they are isolated and not the base for further development

Mac OS X integration:
- Application name is not displayed in the MenuBar, it shows STMain instead
  => Workaround: pass JVM parameter "-Xdock:name=SportsTracker" on startup
  => JDK 9/10 will provide a new API for macOS specific dock and menu integration
- SportsTracker.app and native packages work properly, the name and icons are
  set via JVM parameter there


General TODOs:
--------------

- Use JPA for database persistence instead of XML files
  - Derby or SQLite are interesting options, SQLite links:
    - https://bitbucket.org/xerial/sqlite-jdbc/overview  (mature JDBC driver)
    - https://github.com/sqlitebrowser/sqlitebrowser  (SQLite database client)
- Import feature for devices connected via USB
  - New Tab in Options dialog with these settings:
    - Device directory/drive
    - Import directory
    - Default sport type / subtype
    - Default equipment (optional)
- View Track in Google Maps (browser)
  => create local temporary file, see example
- Overview Dialog: new display mode for comparing 2 seasons / years:
  (https://sourceforge.net/projects/sportstracker/forums/forum/451565/topic/4435642)
  - add a new diagram option in the selection combobox called "Compare two seasons"
  - in this mode the user gets following input fields:
    - year 1 (default: current year) 
    - year 2 (default: previous year)
    - season start month (default: January) 
  - it must display all the monthly data of year 1 on the left (line graph) and
    year 2 on the right vertical axis (dashed graph)
- Exercise Dialog (and all others): use formated text fields for entering
  distance, duration etc. (will be possible with Java 8u40)
- translation updates (german, french and spanish are up to date)
- Batch import for multiple exercise files (e.g. when migrating from Windows
  Polar software): In the Import dialog the user needs to select the the sport 
  type, the subtype, the intensity and which value from distance, AVG speed or 
  duration needs to be recalculated (because these 3 values in the exercise 
  files does not fit together in most cases) first. Then all selected files 
  will be imported as exercises into SportsTracker. 
- FilterDialog should also make possible to show e.g. all bicycle
  sport subtypes, except those from "ergometer" (hint from Steffen Rehn)

Training route/lap support:
- requested by Bernd Mirbach and other users, see mail from Bernd:
- we need a dialog for editing possible routes/laps and the appropriate
  length, ascent and description
- the user can select a predefined route in the exercise dialog and
  the appropriate widgets will be pre-filled
- it should be possible to filter for specific routes for evaluation


ExerciseViewer-TODO
===================

Diagram panel:
- there's no space at the left side when the bottom axis displays "by distance"
  (between left axis and graph start)

ExerciseParsers:
- GarminTcxParser:
  - refactor big method parseExercisePath(...), split into multiple methods
  - parse speed data for Trackpoints if available instead of calculation 
    (available when there's a speed sensor, e.g. on Edge 500 export files) 
  - average speed is wrong when there are pauses in the exercise (Auto-Stop)
- PolarHsrRawParser and PolarSRawParser:
  - Refactor: Extract duplicate methods/code
- HAC4 Parser:
  - more exercise data checks for parser in unit tests
- HRM Parser: 
  - recalculate average heartrate, speed, times within ranges ... from samples,
    there are often wrong values in the appropriate HRM fields (hint from 
    Steffen Rehn) - (Polar Windows software seems to recalculate this too :-)
  - When the monitor displays heartrate and ranges in percent instead in bpm
    the heartrate limit ranges in the HRM files are also stored in percent. 
    But it's not possible yet to determine whether it's bpm (default) or 
    percent. That's why the parses always assumes bpm values.
    (Calculate the BPM values with help of max. heartrate should work ...)  
